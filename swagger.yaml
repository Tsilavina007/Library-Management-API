{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Student Course Management API",
    "description" : "API for managing student groups and students.",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/TsilavinaANDRIAMIHARISON/School_Management/2.0.0"
  } ],
  "paths" : {
    "/groups" : {
      "get" : {
        "tags" : [ "Groups" ],
        "summary" : "Get all groups",
        "operationId" : "getGroups",
        "parameters" : [ {
          "name" : "groupName",
          "in" : "query",
          "description" : "Filter by group name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupYear",
          "in" : "query",
          "description" : "Filter by group year range",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of groups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Groups" ],
        "summary" : "Create a new group",
        "operationId" : "createGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateGroup"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Group created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}" : {
      "delete" : {
        "tags" : [ "Groups" ],
        "summary" : "Delete a group by ID",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Group deleted successfully"
          },
          "404" : {
            "description" : "Group not found"
          }
        }
      }
    },
    "/students" : {
      "get" : {
        "tags" : [ "Students" ],
        "summary" : "Get all students",
        "operationId" : "getStudents",
        "parameters" : [ {
          "name" : "studentName",
          "in" : "query",
          "description" : "Filter by student name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of students",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Students" ],
        "summary" : "Create a new student",
        "operationId" : "createStudent",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateStudent"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Student created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Student"
                }
              }
            }
          }
        }
      }
    },
    "/students/{studentId}" : {
      "delete" : {
        "tags" : [ "Students" ],
        "summary" : "Delete a student by ID",
        "parameters" : [ {
          "name" : "studentId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Student deleted successfully"
          },
          "404" : {
            "description" : "Student not found"
          }
        }
      }
    },
    "/students/{studentId}/group" : {
      "put" : {
        "tags" : [ "Students" ],
        "summary" : "Update the group of a student",
        "operationId" : "updateStudentGroup",
        "parameters" : [ {
          "name" : "studentId",
          "in" : "path",
          "description" : "The ID of the student",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Updated student",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Student"
                }
              }
            }
          }
        }
      }
    },
    "/students/group" : {
      "put" : {
        "tags" : [ "Students" ],
        "summary" : "Update groups for multiple students",
        "operationId" : "updateMultipleStudentGroups",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/students_group_body"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "List of updated students",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Student"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/{studentId}/groups/{groupId}" : {
      "put" : {
        "tags" : [ "Students" ],
        "summary" : "Associate a student with a group by their IDs",
        "operationId" : "associateStudentWithGroup",
        "parameters" : [ {
          "name" : "studentId",
          "in" : "path",
          "description" : "The ID of the student to associate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "The ID of the group to associate",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated student",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Student"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "GroupWithoutStudent" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupYear" : {
            "type" : "string"
          },
          "promotion" : {
            "type" : "string",
            "enum" : [ "G", "H", "J", "K" ]
          }
        }
      },
      "CreateGroup" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/GroupWithoutStudent"
        }, {
          "type" : "object",
          "properties" : {
            "students" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Student"
              }
            }
          }
        } ]
      },
      "Group" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "groupId" : {
              "type" : "string"
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateGroup"
        } ]
      },
      "CreateStudent" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "sex" : {
            "type" : "string",
            "enum" : [ "M", "F" ]
          },
          "birthdate" : {
            "type" : "string",
            "format" : "date"
          },
          "reference" : {
            "type" : "string"
          },
          "group" : {
            "$ref" : "#/components/schemas/CreateStudent_group"
          }
        }
      },
      "Student" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "studentId" : {
              "type" : "string"
            }
          }
        }, {
          "$ref" : "#/components/schemas/CreateStudent"
        } ]
      },
      "students_group_body" : {
        "type" : "object",
        "properties" : {
          "studentId" : {
            "type" : "string"
          },
          "group" : {
            "$ref" : "#/components/schemas/GroupWithoutStudent"
          }
        }
      },
      "CreateStudent_group" : {
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "groupYear" : {
            "type" : "string"
          },
          "promotion" : {
            "type" : "string",
            "enum" : [ "G", "H", "J", "K" ]
          }
        }
      }
    }
  }
}